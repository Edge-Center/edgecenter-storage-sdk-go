// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StorageStats storage stats
//
// swagger:model StorageStats
type StorageStats struct {

	// Statistics grouped by buckets
	// Example: {"bucketA":[[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]}
	BucketsSeries map[string][][]interface{} `json:"buckets_series,omitempty"`

	// Maximum number of files within the specified time period
	FileQuantitySumMax uint64 `json:"file_quantity_sum_max,omitempty"`

	// Storage name
	Name string `json:"name,omitempty"`

	// Total number of incoming requests within the specified time period, displayed in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — number of requests</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	RequestsInSeries [][]interface{} `json:"requests_in_series"`

	// Total number of incoming requests within the specified time period
	RequestsInSum uint64 `json:"requests_in_sum,omitempty"`

	// Total number of requests from the edges within the specified time period, displayed in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — number of requests</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	RequestsOutEdgesSeries [][]interface{} `json:"requests_out_edges_series"`

	// Total number of requests from the edges within the specified time period
	RequestsOutEdgesSum uint64 `json:"requests_out_edges_sum,omitempty"`

	// Total amount of outсoming requests without requests from the edges within the specified time period, displayed
	// in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — amount of requests</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	RequestsOutWoEdgesSeries [][]interface{} `json:"requests_out_wo_edges_series"`

	// Total number of outсoming requests without requests from the edges within the specified time period
	RequestsOutWoEdgesSum uint64 `json:"requests_out_wo_edges_sum,omitempty"`

	// Total number of requests within the specified time period, displayed in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — number of requests</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	RequestsSeries [][]interface{} `json:"requests_series"`

	// Total number of requests within the specified time period
	RequestsSum uint64 `json:"requests_sum,omitempty"`

	// Total number of outсoming requests without requests from the edges within the specified time period, displayed in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — number of requests</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	RequestsWoEdgesSeries [][]interface{} `json:"requests_wo_edges_series"`

	// RequestsWoEdgesSum is sum of requests without edges out requests for grouped period
	RequestsWoEdgesSum uint64 `json:"requests_wo_edges_sum,omitempty"`

	// Maximum amount of all file sizes within the specified time period, displayed in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — maximum amount of all file sizes</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	SizeMaxSeries [][]interface{} `json:"size_max_series"`

	// Mean amount of all file sizes within the specified time period, displayed in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — mean amount of all file sizes</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	SizeMean [][]interface{} `json:"size_mean_series"`

	// Maximum amount of all file sizes within the specified time period
	SizeSumMax uint64 `json:"size_sum_max,omitempty"`

	// Mean amount of all file sizes within the specified time period
	SizeSumMean uint64 `json:"size_sum_mean,omitempty"`

	// Total amount of incoming traffic within the specified time period, displayed in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — amount of traffic</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	TrafficInSeries [][]interface{} `json:"traffic_in_series"`

	// Total amount of incoming traffic within the specified time period
	TrafficInSum uint64 `json:"traffic_in_sum,omitempty"`

	// Total amount of outсoming traffic from the edges within the specified time period, displayed in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — amount of traffic</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	TrafficOutEdgesSeries [][]interface{} `json:"traffic_out_edges_series"`

	// Total number of traffic from the edges within the specified time period
	TrafficOutEdgesSum uint64 `json:"traffic_out_edges_sum,omitempty"`

	// Total amount of outсoming traffic without traffic from the edges within the specified time period, displayed
	// in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — amount of traffic</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	TrafficOutWoEdgesSeries [][]interface{} `json:"traffic_out_wo_edges_series"`

	// Total number of outсoming traffic without requests from the edges within the specified time period
	TrafficOutWoEdgesSum uint64 `json:"traffic_out_wo_edges_sum,omitempty"`

	// Total amount of traffic within the specified time period, displayed in series format.<br>
	// Shows 2 values:<ul>
	// <li><b>timestamp</b> — UNIX timestamp of data grouping;</li>
	// <li><b>count</b> — amount of traffic</li>
	// </ul>
	// Example: [[1690192611,1],[1690192612,2],[1690192613,2],[1690192614,1]]
	TrafficSeries [][]interface{} `json:"traffic_series"`

	// Total amount of traffic within the specified time period
	TrafficSum uint64 `json:"traffic_sum,omitempty"`
}

// Validate validates this storage stats
func (m *StorageStats) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this storage stats based on context it is used
func (m *StorageStats) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StorageStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StorageStats) UnmarshalBinary(b []byte) error {
	var res StorageStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
