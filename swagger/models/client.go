// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Client client
//
// swagger:model Client
type Client struct {

	// Id
	ID int64 `json:"id,omitempty"`

	// product enabled
	ProductEnabled bool `json:"product_enabled,omitempty"`

	// product status
	// Enum: [trial activating trialend active paused new]
	ProductStatus string `json:"product_status,omitempty"`

	// reseller Id
	ResellerID int64 `json:"reseller_id,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`
}

// Validate validates this client
func (m *Client) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProductStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var clientTypeProductStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["trial","activating","trialend","active","paused","new"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clientTypeProductStatusPropEnum = append(clientTypeProductStatusPropEnum, v)
	}
}

const (

	// ClientProductStatusTrial captures enum value "trial"
	ClientProductStatusTrial string = "trial"

	// ClientProductStatusActivating captures enum value "activating"
	ClientProductStatusActivating string = "activating"

	// ClientProductStatusTrialend captures enum value "trialend"
	ClientProductStatusTrialend string = "trialend"

	// ClientProductStatusActive captures enum value "active"
	ClientProductStatusActive string = "active"

	// ClientProductStatusPaused captures enum value "paused"
	ClientProductStatusPaused string = "paused"

	// ClientProductStatusNew captures enum value "new"
	ClientProductStatusNew string = "new"
)

// prop value enum
func (m *Client) validateProductStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, clientTypeProductStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Client) validateProductStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.ProductStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateProductStatusEnum("product_status", "body", m.ProductStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this client based on context it is used
func (m *Client) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Client) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Client) UnmarshalBinary(b []byte) error {
	var res Client
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
