// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StatsMetrics stats metrics
//
// swagger:model StatsMetrics
type StatsMetrics struct {

	// a FileQuantitySumMax is max sum of files quantity for grouped period
	FileQuantitySumMax uint64 `json:"file_quantity_sum_max,omitempty"`

	// a RequestsInSum is sum of incoming  requests for grouped period
	RequestsInSum uint64 `json:"requests_in_sum,omitempty"`

	// a RequestsOutEdgesSum is sum of out edges requests for grouped period
	RequestsOutEdgesSum uint64 `json:"requests_out_edges_sum,omitempty"`

	// a RequestsOutWoEdgesSum is sum of out no edges requests for grouped period
	RequestsOutWoEdgesSum uint64 `json:"requests_out_wo_edges_sum,omitempty"`

	// a RequestsSum is sum of all requests for grouped period
	RequestsSum uint64 `json:"requests_sum,omitempty"`

	// a SizeSumMax is max sum of all files sizes for grouped period
	SizeSumMax uint64 `json:"size_sum_max,omitempty"`

	// a SizeSumMean is mean sum of all files sizes for grouped period
	SizeSumMean uint64 `json:"size_sum_mean,omitempty"`

	// a TrafficInSum is sum of incoming  traffic for grouped period
	TrafficInSum uint64 `json:"traffic_in_sum,omitempty"`

	// a TrafficOutEdgesSum is sum of out edges traffic for grouped period
	TrafficOutEdgesSum uint64 `json:"traffic_out_edges_sum,omitempty"`

	// a TrafficOutWoEdgesSum is sum of out no edges traffic for grouped period
	TrafficOutWoEdgesSum uint64 `json:"traffic_out_wo_edges_sum,omitempty"`

	// a TrafficSum is sum of all traffic for grouped period
	TrafficSum uint64 `json:"traffic_sum,omitempty"`
}

// Validate validates this stats metrics
func (m *StatsMetrics) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this stats metrics based on context it is used
func (m *StatsMetrics) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StatsMetrics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StatsMetrics) UnmarshalBinary(b []byte) error {
	var res StatsMetrics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
