// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/G-Core/gcore-storage-sdk-go/swagger/models"
)

// StorageGetHTTPReader is a Reader for the StorageGetHTTP structure.
type StorageGetHTTPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StorageGetHTTPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStorageGetHTTPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStorageGetHTTPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStorageGetHTTPOK creates a StorageGetHTTPOK with default headers values
func NewStorageGetHTTPOK() *StorageGetHTTPOK {
	return &StorageGetHTTPOK{}
}

/* StorageGetHTTPOK describes a response with status code 200, with default header values.

Storage
*/
type StorageGetHTTPOK struct {
	Payload *models.Storage
}

func (o *StorageGetHTTPOK) Error() string {
	return fmt.Sprintf("[GET /provisioning/v1/storage/{id}][%d] storageGetHttpOK  %+v", 200, o.Payload)
}
func (o *StorageGetHTTPOK) GetPayload() *models.Storage {
	return o.Payload
}

func (o *StorageGetHTTPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Storage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStorageGetHTTPBadRequest creates a StorageGetHTTPBadRequest with default headers values
func NewStorageGetHTTPBadRequest() *StorageGetHTTPBadRequest {
	return &StorageGetHTTPBadRequest{}
}

/* StorageGetHTTPBadRequest describes a response with status code 400, with default header values.

ErrResponse
*/
type StorageGetHTTPBadRequest struct {
	Payload *models.ErrResponse
}

func (o *StorageGetHTTPBadRequest) Error() string {
	return fmt.Sprintf("[GET /provisioning/v1/storage/{id}][%d] storageGetHttpBadRequest  %+v", 400, o.Payload)
}
func (o *StorageGetHTTPBadRequest) GetPayload() *models.ErrResponse {
	return o.Payload
}

func (o *StorageGetHTTPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
