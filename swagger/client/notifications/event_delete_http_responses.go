// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/G-Core/gcorelabs-storage-sdk-go/swagger/models"
)

// EventDeleteHTTPReader is a Reader for the EventDeleteHTTP structure.
type EventDeleteHTTPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EventDeleteHTTPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewEventDeleteHTTPNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEventDeleteHTTPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewEventDeleteHTTPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewEventDeleteHTTPConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEventDeleteHTTPNoContent creates a EventDeleteHTTPNoContent with default headers values
func NewEventDeleteHTTPNoContent() *EventDeleteHTTPNoContent {
	return &EventDeleteHTTPNoContent{}
}

/* EventDeleteHTTPNoContent describes a response with status code 204, with default header values.

A SuccessResponse is a response that shows that operations was completed successfully
*/
type EventDeleteHTTPNoContent struct {
}

func (o *EventDeleteHTTPNoContent) Error() string {
	return fmt.Sprintf("[DELETE /notifications/v1/event][%d] eventDeleteHttpNoContent ", 204)
}

func (o *EventDeleteHTTPNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEventDeleteHTTPBadRequest creates a EventDeleteHTTPBadRequest with default headers values
func NewEventDeleteHTTPBadRequest() *EventDeleteHTTPBadRequest {
	return &EventDeleteHTTPBadRequest{}
}

/* EventDeleteHTTPBadRequest describes a response with status code 400, with default header values.

ErrResponse
*/
type EventDeleteHTTPBadRequest struct {
	Payload *models.ErrResponse
}

func (o *EventDeleteHTTPBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /notifications/v1/event][%d] eventDeleteHttpBadRequest  %+v", 400, o.Payload)
}
func (o *EventDeleteHTTPBadRequest) GetPayload() *models.ErrResponse {
	return o.Payload
}

func (o *EventDeleteHTTPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEventDeleteHTTPUnauthorized creates a EventDeleteHTTPUnauthorized with default headers values
func NewEventDeleteHTTPUnauthorized() *EventDeleteHTTPUnauthorized {
	return &EventDeleteHTTPUnauthorized{}
}

/* EventDeleteHTTPUnauthorized describes a response with status code 401, with default header values.

ErrResponse
*/
type EventDeleteHTTPUnauthorized struct {
	Payload *models.ErrResponse
}

func (o *EventDeleteHTTPUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /notifications/v1/event][%d] eventDeleteHttpUnauthorized  %+v", 401, o.Payload)
}
func (o *EventDeleteHTTPUnauthorized) GetPayload() *models.ErrResponse {
	return o.Payload
}

func (o *EventDeleteHTTPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEventDeleteHTTPConflict creates a EventDeleteHTTPConflict with default headers values
func NewEventDeleteHTTPConflict() *EventDeleteHTTPConflict {
	return &EventDeleteHTTPConflict{}
}

/* EventDeleteHTTPConflict describes a response with status code 409, with default header values.

ErrResponse
*/
type EventDeleteHTTPConflict struct {
	Payload *models.ErrResponse
}

func (o *EventDeleteHTTPConflict) Error() string {
	return fmt.Sprintf("[DELETE /notifications/v1/event][%d] eventDeleteHttpConflict  %+v", 409, o.Payload)
}
func (o *EventDeleteHTTPConflict) GetPayload() *models.ErrResponse {
	return o.Payload
}

func (o *EventDeleteHTTPConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
